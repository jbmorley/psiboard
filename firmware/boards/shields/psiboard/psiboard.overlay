#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    keys {
        compatible = "gpio-keys";
        soft_off_gpio_key: soft_off_gpio_key {
            gpios = <&pro_micro 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        };
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };

    wakeup_scan: wakeup_scan {
        compatible = "zmk,gpio-key-wakeup-trigger";
        trigger = <&soft_off_gpio_key>;
        wakeup-source;
        extra-gpios = <&pro_micro 16 GPIO_ACTIVE_LOW>;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";
        debounce-press-ms = <10>;
        debounce-release-ms = <10>;

        col-gpios
            = <&pro_micro 21 GPIO_ACTIVE_LOW>  // COL0 (PM 21 -> KBD 20)
            , <&pro_micro 20 GPIO_ACTIVE_LOW>  // COL1 (PM 20 -> KBD 19)
            , <&pro_micro 19 GPIO_ACTIVE_LOW>  // COL2 (PM 19 -> KBD 18)
            , <&pro_micro 18 GPIO_ACTIVE_LOW>  // COL3 (PM 18 -> KBD 17)
            , <&pro_micro 15 GPIO_ACTIVE_LOW>  // COL4 (PM 15 -> KBD 16)
            , <&pro_micro 14 GPIO_ACTIVE_LOW>  // COL5 (PM 14 -> KBD 14)
            , <&pro_micro 10 GPIO_ACTIVE_LOW>  // COL7 (PM 10 -> KBD 12)
            , <&pro_micro 16 GPIO_ACTIVE_LOW>  // COL6 (PM 16 -> KBD 13)
            ;

        row-gpios
            = <&pro_micro 1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  // ROW0 (PM 1 -> KBD 15)
            , <&pro_micro 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  // ROW2 (PM 4 -> KBD 10)
            , <&pro_micro 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  // ROW1 (PM 0 -> KBD 11)
            , <&pro_micro 5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  // ROW3 (PM 5 -> KBD 9)
            , <&pro_micro 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  // ROW4 (PM 6 -> KBD 8)
            , <&pro_micro 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  // ROW5 (PM 7 -> KBD 7)
            , <&pro_micro 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>  // ROW6 (PM 8 -> KBD 1-6)
            ;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <5>;
        // ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┐
        // │ Esc │  1  │  2  │  3  │  4  │  5  │  6  │  7  │  8  │  9  │  0  │ Del │
        // └──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴─────┤
        //    │  Q  │  W  │  E  │  R  │  T  │  Y  │  U  │  I  │  O  │  P  │   Ent  │
        // ┌──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┐     │
        // │ Tab │  A  │  S  │  D  │  F  │  G  │  H  │  J  │  K  │  L  │ ' ~ │     │
        // └──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┘
        //    │ Sft │  Z  │  X  │  C  │  V  │  B  │  N  │  M  │ . ? │ Up  │ Sft │
        //    ├─────┼─────┼─────┼─────┴─────┴─────┴─────┼─────┼─────┼─────┼─────┤
        //    │ Ctl │ Fn  │ Mnu │         Space         │ , / │ Lft │ Dwn │ Rgt │
        //    └─────┴─────┴─────┴───────────────────────┴─────┴─────┴─────┴─────┘
        map = <

        // Esc      1        2        3        4        5        6        7        8        9        0        Del
           RC(6,6)  RC(0,4)  RC(1,4)  RC(2,4)  RC(3,4)  RC(4,4)  RC(5,4)  RC(0,7)  RC(1,7)  RC(2,7)  RC(3,7)  RC(4,7)

        //     Q        W        E        R        T        Y        U        I        O        P        Ent
               RC(0,6)  RC(1,6)  RC(2,6)  RC(3,6)  RC(4,6)  RC(5,6)  RC(0,5)  RC(1,5)  RC(2,5)  RC(3,5)  RC(5,5)

        // Tab      A        S        D        F        G        H        J        K        L        ' ~
           RC(0,3)  RC(1,3)  RC(2,3)  RC(3,3)  RC(4,3)  RC(5,3)  RC(0,2)  RC(1,2)  RC(2,2)  RC(4,5)  RC(5,7)

        //     L. Sft   Z        X        C        V        B        N        M        ?        Up       R. Sft
               RC(6,0)  RC(0,1)  RC(1,1)  RC(2,1)  RC(3,1)  RC(4,1)  RC(5,1)  RC(3,2)  RC(4,2)  RC(2,0)  RC(6,1)

        //     L. Ctl   Fn       Mnu                    Space                 , /      Lft      Dwn      Rgt
               RC(6,3)  RC(6,2)  RC(6,5)                RC(1,0)               RC(3,0)  RC(4,0)  RC(5,2)  RC(5,0)
      >;
    };

};
